import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { Button } from "../components/ui/Button";
import { ArrowRight } from "lucide-react";
import { motion } from "framer-motion";
import Header from "../components/Header";
import Footer from "../components/Footer";
import { userDb } from "../models/mockDB/users";

export default function Home() {
  const navigate = useNavigate();
  const [currentUser, setCurrentUser] = useState<ReturnType<
    typeof userDb.getById
  > | null>(null);

  // ============================
  // üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
  // ============================
  useEffect(() => {
    const localId = localStorage.getItem("currentUserId");
    if (localId) {
      const localUser = userDb.getById(localId);
      if (localUser) setCurrentUser(localUser);
    }
  }, []);

  const handleTryFree = () => {
    if (currentUser) navigate(`/profile/${currentUser.id}`);
    else navigate("/login");
  };

  const handleLearnMore = () => navigate("/support");

  const handleCreateAccount = () => {
    if (currentUser) navigate(`/profile/${currentUser.id}`);
    else navigate("/register");
  };

  return (
    <>
      <Header />
      <div className="max-w-7xl mx-auto flex flex-col items-center justify-start overflow-x-hidden drop-shadow-2xl">
        {/* Hero Section */}
        <section className="w-full bg-white pt-32 pb-20 px-6 md:px-12 lg:px-24 flex flex-col lg:flex-row items-center gap-10">
          <div className="flex-1">
            <motion.h1
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              className="text-4xl md:text-5xl font-bold mb-6 text-gray-800"
            >
              –†–æ–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥—ñ ‚Äî{" "}
              <span className="text-blue-600">–±–µ–∑ —Ö–∞–æ—Å—É</span>
            </motion.h1>
            <p className="text-gray-600 text-lg mb-8">
              TeamFlow –æ–±'—î–¥–Ω—É—î –∑–∞–¥–∞—á—ñ, –∫–∞–ª–µ–Ω–¥–∞—Ä—ñ, —á–∞—Ç–∏ —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –≤ —î–¥–∏–Ω–æ–º—É
              –ø—Ä–æ—Å—Ç–æ—Ä—ñ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—ó –∫–æ–º–∞–Ω–¥–Ω–æ—ó —Ä–æ–±–æ—Ç–∏.
            </p>
            <div className="flex gap-4">
              <Button
                className="px-6 py-3 text-lg text-white bg-blue-600 hover:bg-blue-700"
                onClick={handleTryFree}
              >
                –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ
              </Button>
              <Button
                variant="outline"
                className="px-6 py-3 text-lg text-blue-600 border-blue-600 hover:bg-blue-50"
                onClick={handleLearnMore}
              >
                –î—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ
                <ArrowRight className="ml-2 h-5 w-5" />
              </Button>
            </div>
          </div>
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5, delay: 0.2 }}
            className="flex-1"
          >
            <img
              src="/public/images/Dashboard.png"
              alt="TeamFlow preview"
              className="w-full rounded-2xl shadow-xl"
            />
          </motion.div>
        </section>

        {/* Features Section */}
        <section className="w-full bg-gray-50 py-20 px-6 md:px-12 lg:px-24 flex flex-col gap-24">
          {[
            {
              title: "–ü–æ—Ç—É–∂–Ω–∏–π —Ç–∞—Å–∫-–º–µ–Ω–µ–¥–∂–µ—Ä",
              desc: "–ì–Ω—É—á–∫–∏–π Kanban, –¥–µ–¥–ª–∞–π–Ω–∏, –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ —Ç—Ä–µ–∫—ñ–Ω–≥ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è ‚Äî —É—Å–µ –≤ –æ–¥–Ω–æ–º—É –≤—ñ–∫–Ω—ñ.",
              image: "/images/kanban-board.png",
            },
            {
              title: "–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –∫–∞–ª–µ–Ω–¥–∞—Ä—ñ",
              desc: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ç–∞ –∫–æ–º–∞–Ω–¥–Ω—ñ –ø–æ–¥—ñ—ó –∑ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—î—é. –ü—Ä–∞—Ü—é–π—Ç–µ —Ç–∞ –ø–ª–∞–Ω—É–π—Ç–µ –ª–µ–≥–∫–æ.",
              image: "/images/calendar.png",
            },
            {
              title: "–í–±—É–¥–æ–≤–∞–Ω–∏–π —á–∞—Ç —ñ –¥–∑–≤—ñ–Ω–∫–∏",
              desc: "–°–ø—ñ–ª–∫—É–π—Ç–µ—Å—å —É —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –≥—Ä—É–ø–æ–≤–∏—Ö –¥–∑–≤—ñ–Ω–∫—ñ–≤ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.",
              image: "/images/chat.png",
            },
          ].map((feature, index) => (
            <div
              key={index}
              className={`flex flex-col-reverse lg:flex-row ${
                index % 2 === 1 ? "lg:flex-row-reverse" : ""
              } items-center gap-10`}
            >
              <div className="flex-1">
                <h2 className="text-3xl font-semibold mb-4 text-gray-800">
                  {feature.title}
                </h2>
                <p className="text-gray-600 text-lg">{feature.desc}</p>
              </div>
              <div className="flex-1">
                <img
                  src={feature.image}
                  alt={feature.title}
                  className="w-full rounded-xl shadow-lg"
                />
              </div>
            </div>
          ))}
        </section>

        {/* CTA Section */}
        <section className="w-full bg-gray-800 text-white py-16 px-6 md:px-12 lg:px-24 text-center">
          <h2 className="text-4xl font-bold mb-4">
            –ì–æ—Ç–æ–≤—ñ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ TeamFlow?
          </h2>
          <p className="text-lg mb-8">
            –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å —Å—å–æ–≥–æ–¥–Ω—ñ —Ç–∞ –ø–æ—á–Ω—ñ—Ç—å –∫–µ—Ä—É–≤–∞—Ç–∏ —Å–≤–æ—ó–º–∏ –ø—Ä–æ—î–∫—Ç–∞–º–∏ —è–∫
            –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª.
          </p>
          <Button
            size="lg"
            className="text-lg bg-blue-600 hover:bg-blue-700 text-white"
            onClick={handleCreateAccount}
          >
            –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç
          </Button>
        </section>
      </div>

      <Footer />
    </>
  );
}
